@startuml

class JoueurSplendor {
  +jouerTour()
  +changerStrategie(strategie: StrategieCollecteGemmes)
}

class StrategieCollecteGemmes {
  +collecterGemmes()
}

class StrategieCollectePrudente {
  +collecterGemmes()
}

class StrategieCollecteAgressive {
  +collecterGemmes()
}

class FaçadeJoueurSplendor {
  +jouerTour()
}

class GestionGemmes {
  +collecterGemmes(couleur: String)
}

class GestionCartes {
  +acheterCarte(couleur: String)
}

class GestionPointsPrestige {
  +obtenirPointsPrestige()
}

class CarteSplendor {
  +accepterVisiteur(visiteur: VisiteurCarteSplendor)
}

class CarteIndividuelle {
  -cout: int
  -pointsPrestige: int
  +accepterVisiteur(visiteur: VisiteurCarteSplendor)
}

class CombinaisonCartes {
  +ajouterCarte(carte: CarteSplendor)
  +accepterVisiteur(visiteur: VisiteurCarteSplendor)
}

class VisiteurCarteSplendor {
  +visiterCarteIndividuelle(carte: CarteIndividuelle)
  +visiterCombinaisonCartes(combinaison: CombinaisonCartes)
}

class Memento {
  -etat: EtatJoueur
  +getEtat()
}

class EtatJoueur {
  -nombreGemmes: int
  -nombrePointsPrestige: int
  +getNombreGemmes()
  +getNombrePointsPrestige()
}

JoueurSplendor --|> StrategieCollecteGemmes
StrategieCollecteGemmes <|.. StrategieCollectePrudente
StrategieCollecteGemmes <|.. StrategieCollecteAgressive
JoueurSplendor --> FaçadeJoueurSplendor
FaçadeJoueurSplendor --> GestionGemmes
FaçadeJoueurSplendor --> GestionCartes
FaçadeJoueurSplendor --> GestionPointsPrestige
FaçadeJoueurSplendor --> EtatJoueur
EtatJoueur --> Memento
JoueurSplendor --> StrategieCollecteGemmes
StrategieCollecteGemmes --> GestionGemmes
StrategieCollecteGemmes --> GestionCartes
StrategieCollecteGemmes --> GestionPointsPrestige
GestionCartes --> CarteSplendor
CarteSplendor <|.. CarteIndividuelle
CarteSplendor <|.. CombinaisonCartes
VisiteurCarteSplendor <|.. VisiteurCalcul
VisiteurCalcul --> CarteIndividuelle
VisiteurCalcul --> CombinaisonCartes

@enduml
