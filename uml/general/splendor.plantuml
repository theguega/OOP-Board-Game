@startuml splendor
'    https://plantuml.com/class-diagram

class JetonException {
  - info : string
}

class PrivilegeException {
  - info : string
}

enum CouleurJeton {
  RUBIS
  SAPHIR
  ÉMÉRAUDE
  ONYX
  DIAMANT
  OR
  PERLE
}



class Jeton {
  - couleur: CouleurJeton
}

class Privilege {
}

class LotPrivileges {
  - privileges: vector<const Privilege*>
}

class Sac {
  - jetons: vector<const Jeton*>
}

class Plateau {
  - jetons: array<array<const Jeton*, 5>, 5>
  - privileges: vector<const Privilege*>
  - liste_pos: array<tuple<size_t, size_t>, 25>
  - max_privileges : size_t
}

LotDeJetons *--"25" Jeton
Sac "0..1" o-- "0...25" Jeton
Privilege "3" --* LotPrivileges
Plateau "0..1" o- "0..25" Jeton
Privilege "0..3" -o "0..1" Plateau

' Cartes

enum CouleurCarte

enum TypeCarte

enum Capacite

class Carte{
    - type : enum
    - prix : Prix
    - bonus : Bonus
    - capacite : enum
    - nbCouronnes : int
    - nbPtsPrivilege : int
    - reserve : bool
}

class Bonus{
    - couleur : enum
    - nbBonus : int
}

class Prix{
    - blanc, bleu, ... : int
}

class Pioche {
    - type_cartes : enum
    - cartes : vector<Carte*>
    - nb_cartes : int
}

class JeuCarte {
    - cartes_nv1 : array
    - ...
    - cartes_nobles : array
}

class Pyramide {
}

Carte "67" ---* JeuCarte
Carte --o Pyramide
Pioche "0...1" o-- "0...30"Carte
Carte o-- "0...1" Bonus
Carte o-- "0...1" Prix
Carte o- CouleurCarte
TypeCarte o- Carte
Carte o- Capacite

' Joueur

class Joueur {
    - nom : string
    - typeDeJoueur : enum type
    - cartes : unordered_map
    - jetons : unordered_map
    - privileges : vector
}

abstract Strategy {
}

class StrategyHumain
class StrategyIA

Joueur *- Strategy
StrategyHumain --|> Strategy
StrategyIA --|> Strategy
enum Type {
    IA
    HUMAIN
}

' Partie

class Partie {
    - static instance: Partie*
    - espaceJeux: EspaceJeux*
    - joueurs: Joueur*[2]
    - tour: int
    - joueurCourant: int
}

' Others

class EspaceJeux {
    + sac : Sac
    + pyramide : Pyramide
    + plateau : Plateau
}

class Jeu {
    + lancer() : Partie
    + conditionsVictoire() : bool
}

Partie *--- EspaceJeux
Partie *-- Joueur

EspaceJeux *--- Sac
EspaceJeux *--- Pyramide
EspaceJeux *--- Plateau
EspaceJeux *--- LotDeJetons
EspaceJeux *--- LotPrivileges
EspaceJeux *-- JeuCarte
Pioche -* EspaceJeux

Jeu <-- Partie

@enduml
